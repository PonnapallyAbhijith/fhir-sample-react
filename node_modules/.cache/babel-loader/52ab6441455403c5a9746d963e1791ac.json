{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhijith.ponnapally\\\\smart-react-app-template\\\\src\\\\components\\\\DropDown\\\\DropDown.tsx\";\nimport React, { useCallback } from 'react';\nimport Select from 'react-select';\nimport classes from './DropDown.module.scss';\n\nconst DropDown = ({\n  options,\n  label,\n  id,\n  onChange,\n  selectedValue\n}) => {\n  const onChangeCallback = useCallback(value => {\n    if (onChange) onChange(value == null ? null : value);\n  }, [onChange]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.dropdown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, label), /*#__PURE__*/React.createElement(Select, {\n    classNamePrefix: \"DropDown\",\n    inputId: id,\n    selectValue: selectedValue,\n    onChange: onChangeCallback,\n    options: options,\n    \"aria-label\": label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default DropDown;","map":{"version":3,"sources":["C:/Users/abhijith.ponnapally/smart-react-app-template/src/components/DropDown/DropDown.tsx"],"names":["React","useCallback","Select","classes","DropDown","options","label","id","onChange","selectedValue","onChangeCallback","value","dropdown"],"mappings":";AAAA,OAAOA,KAAP,IAAoBC,WAApB,QAAuC,OAAvC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,OAAP,MAAoB,wBAApB;;AAeA,MAAMC,QAAmB,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA,EAAlB;AAAsBC,EAAAA,QAAtB;AAAgCC,EAAAA;AAAhC,CAAD,KAA4D;AACtF,QAAMC,gBAAgB,GAAGT,WAAW,CACjCU,KAAD,IAA8D;AAC5D,QAAIH,QAAJ,EAAcA,QAAQ,CAACG,KAAK,IAAI,IAAT,GAAgB,IAAhB,GAAuBA,KAAxB,CAAR;AACf,GAHiC,EAIlC,CAACH,QAAD,CAJkC,CAApC;AAOA,sBACE;AAAK,IAAA,SAAS,EAAEL,OAAO,CAACS,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAEL,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBD,KAArB,CADF,eAGE,oBAAC,MAAD;AACE,IAAA,eAAe,EAAC,UADlB;AAEE,IAAA,OAAO,EAAEC,EAFX;AAGE,IAAA,WAAW,EAAEE,aAHf;AAIE,IAAA,QAAQ,EAAEC,gBAJZ;AAKE,IAAA,OAAO,EAAEL,OALX;AAME,kBAAYC,KANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAcD,CAtBD;;AAwBA,eAAeF,QAAf","sourcesContent":["import React, { FC, useCallback } from 'react';\r\nimport Select from 'react-select';\r\n\r\nimport classes from './DropDown.module.scss';\r\n\r\ninterface Props {\r\n  label?: string;\r\n  id: string;\r\n  options: Array<Option>;\r\n  onChange?: (value: Option | ReadonlyArray<Option> | null) => void;\r\n  selectedValue: Option | ReadonlyArray<Option> | null;\r\n}\r\n\r\ntype Option = {\r\n  label: string;\r\n  value: string;\r\n};\r\n\r\nconst DropDown: FC<Props> = ({ options, label, id, onChange, selectedValue }: Props) => {\r\n  const onChangeCallback = useCallback(\r\n    (value: Option | ReadonlyArray<Option> | null | undefined) => {\r\n      if (onChange) onChange(value == null ? null : value);\r\n    },\r\n    [onChange]\r\n  );\r\n\r\n  return (\r\n    <div className={classes.dropdown}>\r\n      <label htmlFor={id}>{label}</label>\r\n\r\n      <Select\r\n        classNamePrefix=\"DropDown\"\r\n        inputId={id}\r\n        selectValue={selectedValue}\r\n        onChange={onChangeCallback}\r\n        options={options}\r\n        aria-label={label}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropDown;\r\n"]},"metadata":{},"sourceType":"module"}