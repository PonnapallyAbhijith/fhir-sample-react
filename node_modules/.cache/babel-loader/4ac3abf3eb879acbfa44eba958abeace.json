{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhijith.ponnapally\\\\smart-react-app-template\\\\src\\\\components\\\\PatientProvider.tsx\";\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useFHIRClient } from './FHIRClient';\nexport const PatientContext = createContext(null);\nexport const PatientProvider = ({\n  children\n}) => {\n  const client = useFHIRClient();\n  const [patient, setPatient] = useState(null);\n  useEffect(() => {\n    client.patient.read().then(patient => setPatient(patient));\n  }, [client]);\n  return patient == null ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(PatientContext.Provider, {\n    value: patient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, children);\n}; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\nexport const usePatient = () => useContext(PatientContext);","map":{"version":3,"sources":["C:/Users/abhijith.ponnapally/smart-react-app-template/src/components/PatientProvider.tsx"],"names":["React","createContext","useContext","useEffect","useState","useFHIRClient","PatientContext","PatientProvider","children","client","patient","setPatient","read","then","usePatient"],"mappings":";AAAA,OAAOA,KAAP,IAAoBC,aAApB,EAAmCC,UAAnC,EAA+CC,SAA/C,EAA0DC,QAA1D,QAAqF,OAArF;AACA,SAASC,aAAT,QAA8B,cAA9B;AAMA,OAAO,MAAMC,cAAc,GAAGL,aAAa,CAAsB,IAAtB,CAApC;AAEP,OAAO,MAAMM,eAAyC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACzE,QAAMC,MAAM,GAAGJ,aAAa,EAA5B;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAsB,IAAtB,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,MAAM,CAACC,OAAP,CAAeE,IAAf,GAAsBC,IAAtB,CAA4BH,OAAD,IAA2BC,UAAU,CAACD,OAAD,CAAhE;AACD,GAFQ,EAEN,CAACD,MAAD,CAFM,CAAT;AAIA,SAAOC,OAAO,IAAI,IAAX,gBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADK,gBAGL,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAEA,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CF,QAA1C,CAHF;AAKD,CAbM,C,CAeP;;AACA,OAAO,MAAMM,UAAU,GAAG,MAAoBZ,UAAU,CAACI,cAAD,CAAjD","sourcesContent":["import React, { FC, createContext, useContext, useEffect, useState, ReactNode } from 'react';\r\nimport { useFHIRClient } from './FHIRClient';\r\n\r\ninterface PatientProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const PatientContext = createContext<fhir.Patient | null>(null);\r\n\r\nexport const PatientProvider: FC<PatientProviderProps> = ({ children }) => {\r\n  const client = useFHIRClient();\r\n  const [patient, setPatient] = useState<fhir.Patient | null>(null);\r\n\r\n  useEffect(() => {\r\n    client.patient.read().then((patient: fhir.Patient) => setPatient(patient));\r\n  }, [client]);\r\n\r\n  return patient == null ? (\r\n    <div>Loading...</div>\r\n  ) : (\r\n    <PatientContext.Provider value={patient}>{children}</PatientContext.Provider>\r\n  );\r\n};\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\nexport const usePatient = (): fhir.Patient => useContext(PatientContext)!;\r\n"]},"metadata":{},"sourceType":"module"}